[tool.poetry]
name = "openmethane"
version = "0.4.1a0"
description = "Method to calculate a gridded, prior emissions estimate for methane across Australia."
authors = [
     "Peter Rayner <peter.rayner@superpowerinstitute.com.au>",
     "Stephen Thomas",
     "Jared Lewis <jared.lewis@climate-resource.com>",
]
readme = "README.md"
packages = [
    {include = "fourdvar", from = "src"},
    {include = "obs_preprocess", from = "src"},
    {include = "cmaq_preprocess", from = "src"},
]

[tool.poetry.dependencies]
python = ">=3.10,<3.12"
numpy = "^1.26.4"
netcdf4 = "^1.6.5"
func-timeout = "^4.3.5"
scipy = "^1.13.1"
requests = "^2.32.3"
python-dotenv = "^1.0.1"
pyproj = "^3.6.1"
environs = "^11.0.0"
xarray = "^2024.5.0"
xarray-datatree = "^0.0.14"
click = "^8.1.7"
cdsapi = "^0.7.0"
attrs = "^23.2.0"
boto3 = "^1.35.11"

[tool.poetry.group.tests.dependencies]
pytest = "^8.2.1"
pytest-regressions = "^2.5.0"

[tool.poetry.group.dev.dependencies]
ruff = "^0.4.6"
towncrier = "^24.7.1"
awscli = "^1.34.22"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
]

[tool.ruff]
src = ["src"]
target-version = "py311"
# Provide some leeway for long docstring
line-length = 100


[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = [
    "E",  # pycodestyle error
    "W",  # pycodestyle warning
    "F",  # pyflakes
    "I",  # isort
#    "D",  # pydocstyle  # Documentation need a refresh
    "PL",  # pylint
    "TRY",  # tryceratops
    "NPY",  # numpy rules
    "RUF",  # ruff specifics
    "UP",  # pyupgrade
    "S",  # flake8-bandit
    # pandas support via pandas-vet. In some cases we will want to disable
    # this because it can lead to too many false positives.
    "PD",
]
unfixable = [
    "PD002",  # Disable autofix for inplace as this often introduces bugs
]
ignore = [
    "D100",  # Missing docstring in public module
    "D102",  # Missing docstring in public method
    "D105",  # Missing docstring in magic methods
    "D106",  # Missing docstring in public nested class
    "D400",  # First line should end with a period
    "TRY003",  # Avoid specifying long messages outside the exception class
    "PD011", #  Use `.to_numpy()` instead of `.values`
    "S101", #  Use of `assert` detected
    "PLR2004", # Magic value used in comparison
]

[tool.ruff.lint.per-file-ignores]
"test*.py" = [
    "D",  # Documentation not needed in tests
    "S101",  # S101 Use of `assert` detected
    "PLR2004" # Magic value used in comparison
]

[tool.ruff.lint.isort]
known-first-party = ["src"]


[tool.towncrier]
package = "fourdvar"
package_dir = "src"
filename = "docs/changelog.md"
directory = "changelog/"
title_format = "## openmethane {version} ({project_date})"
underlines = [
    "",
    "",
    "",
]
issue_format = "[#{issue}](https://github.com/openmethane/openmethane/pulls/{issue})"
type = [
    { directory = "breaking", name = "⚠️ Breaking Changes", showcontent = true },
    { directory = "deprecation", name = "🗑️ Deprecations", showcontent = true },
    { directory = "feature", name = "🆕 Features", showcontent = true },
    { directory = "improvement", name = "🎉 Improvements", showcontent = true },
    { directory = "fix", name = "🐛 Bug Fixes", showcontent = true },
    { directory = "docs", name = "📚 Improved Documentation", showcontent = true },
    { directory = "trivial", name = "🔧 Trivial/Internal Changes", showcontent = false },
]